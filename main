// Hordes.io Mobile HUD v2
(function () {
    alert("✅ HUD Mobile ativado!");

    // Função p/ simular tecla
    function pressKey(key, type) {
        document.dispatchEvent(new KeyboardEvent(type, { key }));
    }

    // Container geral do HUD
    const hud = document.createElement("div");
    hud.style.position = "fixed";
    hud.style.top = "0";
    hud.style.left = "0";
    hud.style.width = "100%";
    hud.style.height = "100%";
    hud.style.zIndex = "9999";
    hud.style.pointerEvents = "none"; // deixa fundo jogável
    document.body.appendChild(hud);

    // Função p/ criar botão
    function addButton(text, key, right, bottom) {
        const btn = document.createElement("div");
        btn.innerText = text;
        btn.style.position = "absolute";
        btn.style.right = right + "px";
        btn.style.bottom = bottom + "px";
        btn.style.width = "60px";
        btn.style.height = "60px";
        btn.style.borderRadius = "12px";
        btn.style.background = "rgba(0,0,0,0.6)";
        btn.style.color = "#fff";
        btn.style.fontSize = "22px";
        btn.style.display = "flex";
        btn.style.alignItems = "center";
        btn.style.justifyContent = "center";
        btn.style.pointerEvents = "auto"; // habilita clique
        btn.style.userSelect = "none";

        // eventos de toque
        btn.addEventListener("touchstart", () => pressKey(key, "keydown"));
        btn.addEventListener("touchend", () => pressKey(key, "keyup"));

        hud.appendChild(btn);
    }

    // Botões de skills
    addButton("1", "1", 180, 120);
    addButton("2", "2", 110, 120);
    addButton("3", "3", 40, 120);
    addButton("Q", "q", 180, 50);
    addButton("E", "e", 110, 50);
    addButton("R", "r", 40, 50);
    addButton("F", "f", 250, 85);
    addButton("⚔️", " ", 320, 85); // espaço -> ataque

    // Joystick virtual
    const joyOuter = document.createElement("div");
    joyOuter.style.position = "absolute";
    joyOuter.style.left = "40px";
    joyOuter.style.bottom = "60px";
    joyOuter.style.width = "140px";
    joyOuter.style.height = "140px";
    joyOuter.style.borderRadius = "50%";
    joyOuter.style.background = "rgba(255,255,255,0.1)";
    joyOuter.style.pointerEvents = "auto";
    hud.appendChild(joyOuter);

    const joyInner = document.createElement("div");
    joyInner.style.width = "60px";
    joyInner.style.height = "60px";
    joyInner.style.margin = "40px";
    joyInner.style.borderRadius = "50%";
    joyInner.style.background = "rgba(100,100,255,0.7)";
    joyOuter.appendChild(joyInner);

    let joyActive = false, joyCenterX = 0, joyCenterY = 0;

    joyOuter.addEventListener("touchstart", e => {
        joyActive = true;
        const rect = joyOuter.getBoundingClientRect();
        joyCenterX = rect.left + rect.width / 2;
        joyCenterY = rect.top + rect.height / 2;
    });

    joyOuter.addEventListener("touchmove", e => {
        if (!joyActive) return;
        const touch = e.touches[0];
        const dx = touch.clientX - joyCenterX;
        const dy = touch.clientY - joyCenterY;

        // reset
        ["w", "a", "s", "d"].forEach(k => pressKey(k, "keyup"));

        if (dy < -20) pressKey("w", "keydown");
        if (dy > 20) pressKey("s", "keydown");
        if (dx < -20) pressKey("a", "keydown");
        if (dx > 20) pressKey("d", "keydown");

        joyInner.style.transform = `translate(${dx * 0.3}px, ${dy * 0.3}px)`;
    });

    joyOuter.addEventListener("touchend", e => {
        joyActive = false;
        ["w", "a", "s", "d"].forEach(k => pressKey(k, "keyup"));
        joyInner.style.transform = "translate(0,0)";
    });

})();
